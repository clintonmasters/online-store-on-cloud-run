resources:
  - name: source_code
    type: GitRepo
    configuration:
      gitProvider: Github
      path: gdg-cloud-montreal/microservices-demo
  - name: docker_frontend_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: build_and_deploy_cloudrun_pipeline
      buildNumber: ${run_number}
  - name: frontend_image
    type: image
    configuration: 
      registry: artifactory
      sourceRepository: docker_local
      imageName:  ${int_server_name_value}.jfrog.io/docker_local/boutique/frontend
      imageTag: ${run_number}

pipelines:
  - name: build_and_deploy_cloudrun_pipeline
    steps:
    - name: build_frontend_docker
      type: DockerBuild
      configuration:
        affinityGroup: fmkGroup
        dockerFileLocation: src/frontend
        dockerFileName: Dockerfile
        dockerImageName: ${int_server_name_value}.jfrog.io/docker_local/boutique/frontend
        dockerImageTag: ${run_number}
        dockerOptions: --build-arg SERVER_NAME=${int_server_name_value}
        integrations:        
          - name: artifactory
          - name: docker
          - name: server_name
        inputResources:
          - name: source_code
    - name: push_frontend_docker
      type: DockerPush
      configuration:
        affinityGroup: fmkGroup
        targetRepository: boutique
        autoPublishBuildInfo: true
        integrations:
          - name: artifactory
        inputSteps:
          - name: build_frontend_docker
        outputResources:
          - name: docker_frontend_build_info
    - name: xray_scan_frontend_docker
      type: XrayScan
      configuration:
        affinityGroup: fmkGroup
        failOnScan: false
        inputSteps:
          - name: push_frontend_docker
        inputResources:
          - name: docker_frontend_build_info
            trigger: false
    - name: gcloud_deploy_frontend
      type: Bash
      configuration:
        affinityGroup: fmkGroup
        inputSteps:
          - name:  xray_scan_frontend_docker
        inputResources:
          - name: docker_frontend_build_info
        runtime:
          type: image
          image:
            custom:
              name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
              tag: "latest"
        integrations:
          - name: gcp_login
          - name: knativeService
      execution:
        onExecute:
        - echo $int_gcp_login_jsonkey > /tmp/json.key
        - echo $int_knativeService_service > /tmp/knativeService.yaml
        - gcloud auth activate-service-account $int_gcp_login_user --key-file /tmp/json.key
        - | 
          gcloud run deploy bank-frontend \
          --image  ${int_server_name_value}.jfrog.io/boutique/frontend:$run_number\
          --cluster cluster-1 --cluster-location us-central1-c \
          --platform gke --project $int_gcp_login_project
